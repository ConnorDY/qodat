package stan.qodat.cache.definition

import net.runelite.cache.definitions.ClientScript1Instruction

interface InterfaceDefinition {

    var id: Int
    var isIf3: Boolean
    var type: Int
    var contentType: Int
    var originalX: Int
    var originalY: Int
    var originalWidth: Int
    var originalHeight: Int
    var widthMode: Int
    var heightMode: Int
    var xPositionMode: Int
    var yPositionMode: Int
    var parentId: Int
    var isHidden: Boolean
    var scrollWidth: Int
    var scrollHeight: Int
    var noClickThrough: Boolean
    var spriteId: Int
    var textureId: Int
    var spriteTiling: Boolean
    var opacity: Int
    var borderType: Int
    var shadowColor: Int
    var flippedVertically: Boolean
    var flippedHorizontally: Boolean
    var modelType: Int
    var modelId: Int
    var offsetX2d: Int
    var offsetY2d: Int
    var rotationX: Int
    var rotationY: Int
    var rotationZ: Int
    var modelZoom: Int
    var animation: Int
    var orthogonal: Boolean
    var modelHeightOverride: Int
    var fontId: Int
    var text: String?
    var lineHeight: Int
    var xTextAlignment: Int
    var yTextAlignment: Int
    var textShadowed: Boolean
    var textColor: Int
    var filled: Boolean
    var lineWidth: Int
    var lineDirection: Boolean
    var clickMask: Int
    var name: String?
    var actions: Array<String>?
    var dragDeadZone: Int
    var dragDeadTime: Int
    var dragRenderBehavior: Boolean
    var targetVerb: String?
    var onLoadListener: Array<Any>?
    var onMouseOverListener: Array<Any>?
    var onMouseLeaveListener: Array<Any>?
    var onTargetLeaveListener: Array<Any>?
    var onTargetEnterListener: Array<Any>?
    var onVarTransmitListener: Array<Any>?
    var onInvTransmitListener: Array<Any>?
    var onStatTransmitListener: Array<Any>?
    var onTimerListener: Array<Any>?
    var onOpListener: Array<Any>?
    var onMouseRepeatListener: Array<Any>?
    var onClickListener: Array<Any>?
    var onClickRepeatListener: Array<Any>?
    var onReleaseListener: Array<Any>?
    var onHoldListener: Array<Any>?
    var onDragListener: Array<Any>?
    var onDragCompleteListener: Array<Any>?
    var onScrollWheelListener: Array<Any>?
    var varTransmitTriggers: IntArray?
    var invTransmitTriggers: IntArray?
    var statTransmitTriggers: IntArray?
    var hasListener: Boolean

    var menuType: Int

    // This is set to a siblings' child id when that widget should get a hover effect when this one is hovered
    var hoveredSiblingId: Int
    var alternateOperators: IntArray?
    var alternateRhs: IntArray?
    var clientScripts: Array<Array<ClientScript1Instruction>>?
    var itemIds: IntArray?
    var itemQuantities: IntArray?
    var xPitch: Int
    var yPitch: Int
    var xOffsets: IntArray?
    var yOffsets: IntArray?
    var sprites: IntArray?
    var configActions: Array<String>?
    var alternateText: String?
    var alternateTextColor: Int
    var hoveredTextColor: Int
    var alternateHoveredTextColor: Int
    var alternateSpriteId: Int
    var alternateModelId: Int
    var alternateAnimation: Int
    var spellName: String?
    var tooltip: String?
}